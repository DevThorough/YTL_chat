{
    "PK3wL7DXuuw": {
        "videoId": "PK3wL7DXuuw",
        "title": "Regular Languages: Deterministic Finite Automaton (DFA)",
        "publishedAt": "2020-04-22T07:37:41Z",
        "stats": {
            "viewCount": "89471",
            "likeCount": "3772",
            "favoriteCount": "0",
            "commentCount": "166"
        },
        "captions": "Kind: captions Language: en a quick note before we get started I will use a term machine and otamatone interchangeably they do mean the same thing and the plural of otamatone is a Tomita a finite state machine also known as a finite automaton is a simplest computational model we can construct it has extremely limited memory but it can still do many things and these machines are actually very often used in our everyday devices for example the controller for switching an oven on or off is a finite state machine this controller will have two States on and off let's say this oven is brand-new so it first starts in the off state whichever state we start in is called the start state and we have a little arrow pointing at it now when the button controlling the controller is pressed it goes into the on state and if the button is pressed again it goes back into the off state pretty simple right so let's build on that understanding and construct a slightly more exciting machine let's construct a machine that takes in a string of weather data as input and tells us whether a heatwave occurred in a given year in India the India meteorological department considers it a heatwave if the maximum temperatures reach 45 degrees Celsius for two consecutive days so using this definition of a heatwave let's construct our machine let's say this is our start state and we're just going to call it q0 if we hit a day where the temperature is over 45 degrees we transition into this new state which we will call q1 and if we hit another day where the temperature is over 45 degrees we transition into this other state which we will call q2 since the heatwave is defined as having two consecutive days with temperatures over 45 degrees then when we reach q2 we know that a heat wave had indeed occurred so we call q2 and a Sepp state and to represent the except state we draw another circle around q2 and to complete our machine going back to our start state q0 if the temperature is not over 45 degrees we will remain in the same state and if we are in state Q 1 and the next temperature red drops below 45 degrees then we will go back to our start state q0 because for it to be considered a heat wave temperatures must be over 45 degrees for two days in a row and if we are already in our set state q2 we don't have to go anywhere because the heat wave has already occurred and finally we'll just modify our machine a little bit more and let's use a 1 to represent a day with a temperature over 45 degrees and we use zero to represent a day with a temperature less than 45 degrees and there we have it our finite automata in which we will now call M well tell us if a heat wave had occurred notice that the otamatone will enter the acept state if it takes in any string containing two consecutive ones as input all these strings that eventually arrive at one of the machines acept states are a part of the language of the machine so the language of this machine is a set of all strings containing two consecutive ones we say that the otamatone recognizes this language and it accepts all the strings in the language and rejects those that are not in the language so M accepts 1 1 1 1 0 0 1 1 0 and so on this kind of otamatone is called a deterministic finite automaton or DFA for short they are called deterministic because for every symbol of an input string read we will always know what the next state will be the next state is determined what we have here is a state diagram of the DFA and to formally define the efface we use a five tuple q is a finite set of the Machine States and for our machine M that would be the set containing Q 0 Q 1 and Q 2 Sigma is a finite set called the alphabet which are the kinds of symbols that are recognized by the machine so in this case it is a set containing 1 and 0 Delta is the transition function which tells us where States transition to given an input symbol for example q0 transitions to state Q 1 when it reads a 1 and remains in q0 when it reads a 0 q 1 transitions to q2 101 and back to Q 1 on a 0 and when we reach Q 2 we will always remain in Q 2 Q 0 is a start state and finally F is a set of a sub States also known as final States sometimes which in this case would just be the set containing Q 2 one final note on finite automata a language is also a regular language if it is recognized by some finite otamatone so the language containing all the strings of two consecutive ones is a regular language since we had constructed an automaton that recognizes it now that was quite a bit of information so let's just summarize what was said in this video 1 DFAS are 5 Q poles that can be represented with state diagrams 2 if the last symbol of an input string causes the machine to be in an asset state then the Machine assets the string 3 the language of a machine is a set of all strings it accepts and finally a language recognized by some finite automaton is called a regular language I will now leave you with all this to digest and a very gentle reminder that as you may start constructing DFAS designing a Taumata is a creative process that takes time and practice the same way it does to design any other work of art"
    }
}