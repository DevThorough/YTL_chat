{
    "U4yGQp5aCTM": {
        "videoId": "U4yGQp5aCTM",
        "title": "Undecidable Problems: Reducibility (Part 1) | What are Reductions?",
        "publishedAt": "2020-12-10T12:35:53Z",
        "stats": {
            "viewCount": "45031",
            "likeCount": "1039",
            "favoriteCount": "0",
            "commentCount": "35"
        },
        "captions": "Kind: captions Language: en there are computationally unsolvable problems such as the halting problem in a previous video we argued that the halting problem was unsolvable through a technique known as diagonalization but now that we know that the halting problem is unsolvable we can use it to show other problems are also unsolvable through something called a reduction a reduction is the act of boiling one problem down to another much like reducing a source down to its core flavors you can think of it as discovering that one problem can be viewed as another problem and if you figure one out you can figure out the other to show that problems are unsolvable we'll work in the world of contradictions which means working with the impossible let's start with this analogy this is mary it is the year 1837 and mary wants a pet dragon mary thinks this boils down to finding a dragon pet shop because if she finds a dragon shop she'll be able to find a pet dragon she has reduced her original problem of finding a pet dragon to the problem of finding a dragon shop and by finding a dragon shop she definitely solves her initial problem of finding her pet dragon but let's come back to our world for a second this world where you are sitting in front of your device watching this video on youtube in this world there are unfortunately no dragons so as much as mary or i or you want a pet dragon we can never have a pet dragon and because having a pet dragon reduces to the problem of finding a dragon shop this means we can never find a dragon shop too because if we found a dragon shop we would have a pet dragon which is a contradiction since dragons don't actually exist despite the confusing terminology reducing a problem to another problem does not mean one of the problems is smaller or necessarily easier than another a reduction of problem a to problem b simply means that we are looking at a in a different form and if we solve problem b we can solve problem a and if we cannot solve problem a then we most definitely cannot solve problem b this part is important for using reductions to show that a problem is unsolvable or in terms of computability theory undecidable we'll now look at an example of how we use reductions to show that a problem is undecidable let's say we want to show that this problem is undecidable let's call it the truth problem the truth problem asks whether we can write a program that determines if another program will return true so how can we show that the truth problem is undecidable through a reduction now remember how we mentioned that if we can reduce problems a to b and by knowing a is undecidable then we show that b is undecidable well since we want to show that the truth problem is undecidable we'll have the truth problem be b and put some other problem that we know is undecidable to be a in another video we saw that the halting problem was undecidable so let's have the halting problem be a and like the dragon and the dragon sharp showing that problem a reduces to problem b will mean that by solving b we will solve a however similar to the fact that dragons cannot exist the holding problem a is undecidable which means the truth problem b that it reduces to must also be undecidable so to complete the proof that the truth problem is undecidable all that is left is to show that we can reduce the halting problem a to truth problem b we'll cover that reduction in the next video"
    }
}