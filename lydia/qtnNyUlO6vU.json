{
    "qtnNyUlO6vU": {
        "videoId": "qtnNyUlO6vU",
        "title": "What is the Pumping Lemma",
        "publishedAt": "2020-11-05T10:17:40Z",
        "stats": {
            "viewCount": "112792",
            "likeCount": "3552",
            "favoriteCount": "0",
            "commentCount": "95"
        },
        "captions": "Kind: captions Language: en we know that all regular languages can be expressed using finite machines or regular expressions and all regular languages will share the same properties such as the closure properties that state that the regular operations union concatenation and star of regular languages are still regular this video will look at another property of regular languages called the pumping lemma however if you already know how the pumping lemma works but specifically want to know how to prove non-regularity check out our other video on non-regularity instead link is in the description below the word lemma in mathematics refers to a mini theorem and simply the pumping lemma states that if a language is regular then every string in the language will have a section that can be repeated or pumped any number of times and still be in the language it's a pretty incredible property and as usual we'll try to provide some intuition for the concept instead of the technical details so how exactly does the pumping lemma work let's take the regular language a that contains every string that ends with 1 1 and its dfa as an example to understand the pumping lemma the pumping lemma states that all strings in the language can be repeated or pumped if they are at least as long as a certain length which we call the pumping length let's call this pumping length p for our example we can assign the pumping length to be the number of states of a's dfa so p will equal 3. now let's see how the machine runs on some strings in a there are at least length 3 such as 0 1 1 1 0 1 1 and 0 1 1 1 1. for all these strings there must have been at least one repeated state which can provide a section of the string being pumped so from 0 1 1 we revisited q 0 using the substring 0. for 1 0 1 1 the substring 1 0 took us between q 0 and q1 for 0 1 1 1 1 substring 0 allowed us to revisit q0 and for each of these substrings the pumping lemma states that we can pump them as many times as we want and the resulting string will still be in the language now notice how we can separate these strings into the part before pumping the part being pumped and the part that takes us to the acep state which if you look at the formal statement of the pumping lemma is what all this means the following three points are just some more technical conditions the first point says that for any string in the regular language there will be a part that can be pumped any number of times which we call y the second point says that the length of y has to be greater than zero which means we cannot pump the empty string so if we look at each string as three parts x y z the part y being pumped cannot be empty but x and z which are the parts before and after the palm string can be the empty string and we saw this in our examples for 0 1 1 0 was the part being pumped and 1 1 was the part that came after so in this case x the part before pumping is empty point 3 says that the length of y can be at most p and must occur within the first p symbols so if we look at our previous example zero one one one one we cannot pump one one one one for example because the substring one one one one has a length larger than p equals three and our pumping string has to be within the first p symbols so the first three symbols and one one one one is not within the first three symbols so as long as a language is regular then every string in the language will be able to meet these three conditions so to sum everything up the pumping lemma is another property of all regular languages so if a language is regular the pumping lemma states that every string in the language whose length is at least that of the pumping length p can be pumped any number of times and still be in the language and why do we need to know this well we actually use the pumping lemma as a way to prove that some languages are not regular which we will look at in another video so check it out if you want to know how we can use the pumping lemma to do that you"
    }
}